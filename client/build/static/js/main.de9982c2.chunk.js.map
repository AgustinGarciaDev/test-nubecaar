{"version":3,"sources":["components/Header.js","BE.js","redux/authActions.js","components/Login.js","partials/TripForm.js","redux/tripActions.js","components/NewTrip.js","components/Amigos.js","partials/SingleTrip.js","components/Pendientes.js","components/Historico.js","App.js","serviceWorker.js","redux/authReducer.js","index.js","assets/logoNube.png"],"names":["connect","state","auth","props","className","to","src","Logo","alt","username","name","API","authActions","logUser","user","dispatch","getState","a","_id","axios","get","forcedLog","data","success","alert","error","userInfo","post","tryToLog","Swal","fire","text","icon","confirmButtonText","loggedUser","type","payload","logOutUser","mapDispatchToProps","useState","password","setUser","loading","setLoading","fieldHandler","e","field","target","value","submitHandler","preventDefault","document","title","id","autoComplete","onChange","htmlFor","disabled","onClick","TripForm","fechaHoy","Date","toLocaleDateString","ano","split","mes","parseInt","dia","fechaMin","min","trip","fecha","hora","tipo","selected","restringido","toString","nombre","autoFocus","telefono","dOrigen","lOrigen","dDestino","lDestino","checked","paradas","conRegreso","tarifa2","observaciones","cancelHandler","tripActions","newTrip","emisor","response","getOtherUsers","saveFriends","friends","put","getTrips","status","deleteTrip","tripNumber","delete","modifyTrip","getHistoryTrips","takeTrip","numero","returnTrip","setNewTrip","map","undefined","history","push","users","setUsers","myFriends","setMyFriends","useEffect","getUsers","changeHandler","newFriends","filter","friend","key","includes","SingleTrip","moreInfo","setMoreInfo","toUpperCase","receptor","data-trip","returnHandler","modifyHandler","deleteHandler","takeHandler","trips","setTrips","setModifyTrip","socket","on","orderedTrips","changedDate","dateForOrder","sort","b","length","dataset","showCancelButton","confirmButtonColor","cancelButtonColor","cancelButtonText","emit","tripInfo","display","setDisplay","setSocket","io","localStorage","getItem","routes","path","render","component","Login","Boolean","window","location","hostname","match","initialState","authReducer","action","setItem","clear","myStore","createStore","applyMiddleware","thunk","ReactDOM","store","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message","module","exports"],"mappings":"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","file":"static/js/main.de9982c2.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Logo from '../assets/logoNube.png'\r\nimport { connect } from 'react-redux';\r\n\r\nconst Header = (props) => {\r\n    return ( \r\n        <header>\r\n            <div className=\"logo-brand\">\r\n                <NavLink to=\"/\"><img src={Logo} className=\"imagen\" alt=\"Logo Nube CAAR\" /></NavLink>\r\n                <h3>Nube CAAR</h3>\r\n            </div>\r\n            {props.auth.username && (\r\n            <div className=\"menu\">\r\n                <ul>\r\n                    <NavLink to=\"/pendientes\">Pendientes</NavLink>\r\n                    <NavLink to=\"/nuevo-viaje\">Nuevo Viaje</NavLink>\r\n                    <NavLink to=\"/historico\">Histórico</NavLink>\r\n                    <NavLink to=\"/amigos\">Amigos</NavLink>\r\n                    <NavLink to=\"/logout\">Logout, {props.auth.name}</NavLink>\r\n                </ul>\r\n            </div>\r\n        )}\r\n        </header>\r\n     );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        auth: state\r\n    }\r\n}\r\n \r\nexport default connect(mapStateToProps)(Header);","export const API = 'https://test-nubecaar.herokuapp.com'","import axios from 'axios'\r\nimport {API} from '../BE'\r\nimport Swal from 'sweetalert2'\r\n\r\nconst authActions = {\r\n    logUser: user => {\r\n        return async (dispatch, getState) => {\r\n            var userInfo;\r\n            if (user._id) {\r\n                const forcedLog = await axios.get(`${API}/api/users/${user._id}`)\r\n                if (!forcedLog.data.success) {\r\n                    return alert(forcedLog.data.error)\r\n                }\r\n                userInfo = {name: forcedLog.data.user.name, \r\n                    username: forcedLog.data.user.username,\r\n                    _id: forcedLog.data.user._id}\r\n            } else {\r\n                const tryToLog = await axios.post(`${API}/api/auth`, {...user})\r\n                if (!tryToLog.data.success) {\r\n                    return Swal.fire({\r\n                        text: 'Usuario y/o Contraseña Incorrectos',\r\n                        icon: 'error',\r\n                        confirmButtonText: 'Reintentar'\r\n                      })\r\n                }\r\n                userInfo = {name: tryToLog.data.loggedUser.name,\r\n                    username: tryToLog.data.loggedUser.username,\r\n                    _id: tryToLog.data.loggedUser._id }\r\n            }\r\n            dispatch({type: 'LOG_USER', payload: userInfo})\r\n        }\r\n    },\r\n\r\n    logOutUser: () => {\r\n        return async (dispatch, getState) => {\r\n            dispatch({type: 'LOGOUT_USER'})\r\n        }\r\n    }\r\n}\r\n\r\nexport default authActions","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport authActions from '../redux/authActions';\r\nimport { Redirect } from 'react-router-dom';\r\nimport Swal from 'sweetalert2'\r\n\r\nconst Login = (props) => {\r\n    const [user, setUser] = useState({username: '', password: ''})\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const fieldHandler = e => {\r\n        const field = e.target.name\r\n        const value = e.target.value\r\n        setUser({...user, [field]: value})\r\n    }\r\n\r\n    const submitHandler = async e => {\r\n        e.preventDefault()\r\n        if (user.username === '' || user.password === '') {\r\n            return Swal.fire({\r\n                text: 'Debes completar ambos campos!',\r\n                icon: 'error',\r\n                confirmButtonText: 'Reintentar'\r\n              })\r\n        } \r\n        setLoading(true)\r\n        // Send username/password to be checked if OK\r\n        await props.logUser(user)\r\n        setLoading(false)\r\n    }\r\n\r\n    if (props.auth.username) {\r\n        return <Redirect to=\"/\" />\r\n    }\r\n\r\n    document.title = 'Sistema Nube | CAAR'\r\n\r\n    return ( \r\n        <div className=\"loginContainer z-depth-5\">\r\n            <form className=\"loginForm\">\r\n                <div className=\"input-field\">\r\n                    <h5>Bienvenido/a...</h5>\r\n                </div>\r\n                <div className=\"input-field mt2vh\">\r\n                    <input type=\"text\" name=\"username\" id=\"username\" value={user.username} autoComplete=\"off\"\r\n                    onChange={fieldHandler}></input>\r\n                    <label htmlFor=\"username\">Nombre de Usuario</label>\r\n                </div>\r\n                <div className=\"input-field mt2vh\">\r\n                    <input type=\"password\" name=\"password\" id=\"password\" value={user.password}\r\n                    onChange={fieldHandler}></input>\r\n                    <label htmlFor=\"password\">Contraseña</label>\r\n                </div>\r\n                <div className=\"input-field mt2vh\">\r\n                    <button className=\"btn btn-large indigo darken-4\" disabled={loading}\r\n                    onClick={submitHandler}>Ingresar</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n     );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        auth: state\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    logUser: authActions.logUser\r\n}\r\n \r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","import React from \"react\";\r\nimport \"../styles/TripForm.css\"\r\n\r\nconst TripForm = (props) => {    \r\n    // Converts current date to format YYYY-MM-DD to use it as minimum in datepicker\r\n    var fechaHoy = new Date().toLocaleDateString()\r\n    let ano = fechaHoy.split('/')[2]\r\n    let mes = (parseInt(fechaHoy.split('/')[1]) < 10) ? `0${fechaHoy.split('/')[1]}` : fechaHoy.split('/')[1]\r\n    let dia = (parseInt(fechaHoy.split('/')[0]) < 10) ? `0${fechaHoy.split('/')[0]}` : fechaHoy.split('/')[0]\r\n    var fechaMin = `${ano}-${mes}-${dia}`\r\n\r\n  return (\r\n    <div className=\"tripForm z-depth-5\">\r\n      <form>\r\n          <div className=\"row\">\r\n            <div className=\"input-field col s6 l3\">\r\n                <input type=\"date\" name=\"fecha\" id=\"fecha\"\r\n                onChange={props.fieldHandler}\r\n                min={fechaMin}\r\n                value={props.trip && props.trip.fecha}\r\n                ></input>\r\n                <label htmlFor=\"fecha\">Fecha (*)</label>\r\n            </div>\r\n            <div className=\"input-field col s6 l3\">\r\n                <input type=\"time\" name=\"hora\" id=\"hora\"\r\n                onChange={props.fieldHandler}\r\n                value={props.trip && props.trip.hora}\r\n                ></input>\r\n                <label htmlFor=\"hora\">Hora (*)</label>\r\n            </div>\r\n            <div className=\"input-field col s12 m6 l3\">\r\n                <select className=\"browser-default\" name=\"tipo\" id=\"tipo\"\r\n                onChange={props.fieldHandler}\r\n                value={props.trip && props.trip.tipo}\r\n                >\r\n                    <option value=\"\" disabled selected>Tipo de Vehículo</option>\r\n                    <option value=\"S\">Standard</option>\r\n                    <option value=\"E\">Ejecutivo</option>\r\n                    <option value=\"P\">Partner</option>\r\n                </select>\r\n            </div>\r\n            <div className=\"input-field col s12 m6 l3\">\r\n                <select className=\"browser-default\" name=\"restringido\" id=\"restringido\"\r\n                onChange={props.fieldHandler}\r\n                value={props.trip && props.trip.restringido.toString()}\r\n                >\r\n                    <option value=\"\" disabled selected>¿Quiénes verán este viaje?</option>\r\n                    <option value=\"false\">Todas las agencias</option>\r\n                    <option value=\"true\">Solo mis amigos</option>\r\n                </select>\r\n            </div>\r\n          </div>\r\n            <div className=\"row\">\r\n                <div className=\"input-field col s12 m6\">\r\n                    <input type=\"text\" name=\"nombre\" id=\"nombre\"\r\n                    onChange={props.fieldHandler}\r\n                    value={props.trip && props.trip.nombre}\r\n                    autoComplete=\"off\"\r\n                    autoFocus={props.trip}\r\n                    ></input>\r\n                    <label htmlFor=\"nombre\">Nombre del Pasajero (*)</label>\r\n                </div>\r\n                <div className=\"input-field col s12 m6\">\r\n                    <input type=\"text\" name=\"telefono\" id=\"telefono\"\r\n                    onChange={props.fieldHandler}\r\n                    value={props.trip && props.trip.telefono}\r\n                    autoComplete=\"off\"\r\n                    autoFocus={props.trip}\r\n                    ></input>\r\n                    <label htmlFor=\"telefono\">Teléfono del Pasajero</label>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"input-field col s12 m6\">\r\n                    <input type=\"text\" name=\"dOrigen\" id=\"dOrigen\"\r\n                    onChange={props.fieldHandler}\r\n                    value={props.trip && props.trip.dOrigen}\r\n                    autoComplete=\"off\"\r\n                    autoFocus={props.trip}\r\n                    ></input>\r\n                    <label htmlFor=\"dOrigen\">Dirección de Origen (*)</label>\r\n                </div>\r\n                <div className=\"input-field col s12 m6\">\r\n                    <input type=\"text\" name=\"lOrigen\" id=\"lOrigen\"\r\n                    onChange={props.fieldHandler}\r\n                    value={props.trip && props.trip.lOrigen}\r\n                    autoComplete=\"off\"\r\n                    autoFocus={props.trip}\r\n                    ></input>\r\n                    <label htmlFor=\"lOrigen\">Localidad de Origen (*)</label>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"input-field col s12 m6\">\r\n                    <input type=\"text\" name=\"dDestino\" id=\"dDestino\"\r\n                    onChange={props.fieldHandler}\r\n                    value={props.trip && props.trip.dDestino}\r\n                    autoComplete=\"off\"\r\n                    autoFocus={props.trip}\r\n                    ></input>\r\n                    <label htmlFor=\"dDestino\">Dirección de Destino</label>\r\n                </div>\r\n                <div className=\"input-field col s12 m6\">\r\n                    <input type=\"text\" name=\"lDestino\" id=\"lDestino\"\r\n                    onChange={props.fieldHandler}\r\n                    value={props.trip && props.trip.lDestino}\r\n                    autoComplete=\"off\"\r\n                    autoFocus={props.trip}\r\n                    ></input>\r\n                    <label htmlFor=\"lDestino\">Localidad de Destino</label>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col s12 l4\">\r\n                    <label>\r\n                        <input type=\"checkbox\" className=\"filled-in\" name=\"paradas\" id=\"paradas\" \r\n                        onChange={props.fieldHandler}\r\n                        checked={props.trip && props.trip.paradas}\r\n                        />\r\n                        <span>¿Tiene paradas intermedias?</span>\r\n                    </label>\r\n                    <br/>\r\n                    <label>\r\n                        <input type=\"checkbox\" className=\"filled-in\" name=\"conRegreso\" id=\"conRegreso\" \r\n                        onChange={props.fieldHandler}\r\n                        checked={props.trip && props.trip.conRegreso}\r\n                        />\r\n                        <span>¿Es con espera y regreso?</span>\r\n                    </label>\r\n                    <br/>\r\n                    <label>\r\n                        <input type=\"checkbox\" className=\"filled-in\" name=\"tarifa2\" id=\"tarifa2\" \r\n                        onChange={props.fieldHandler}\r\n                        checked={props.trip && props.trip.tarifa2}\r\n                        />\r\n                        <span>¿Es apto TARIFA 2?</span>\r\n                    </label>\r\n                </div>\r\n                <div className=\"input-field col s12 l8\">\r\n                    <textarea className=\"materialize-textarea\" name=\"observaciones\" id=\"observaciones\"\r\n                    onChange={props.fieldHandler}\r\n                    value={props.trip && props.trip.observaciones}\r\n                    autoFocus={props.trip}\r\n                    ></textarea>\r\n                    <label htmlFor=\"observaciones\">Ingrese aquí información extra</label>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row botones\">\r\n              <div className=\"col s6\">\r\n                    <button className=\"btn red darken-4\" onClick={props.cancelHandler}\r\n                    disabled={props.loading}>Cancelar</button>\r\n              </div>\r\n              <div className=\"col s6\">\r\n                    <button className=\"btn green darken-4\" onClick={props.submitHandler}\r\n                    disabled={props.loading}>Validar</button>\r\n              </div>\r\n            </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TripForm;\r\n","import axios from 'axios'\r\nimport {API} from '../BE'\r\n\r\nconst tripActions = {\r\n    newTrip: trip => {\r\n        return async (dispatch, getState) => {\r\n            // Send trip to backend and awaits for answer\r\n            const response = await axios.post(`${API}/api/trips/${trip.emisor}`, {...trip})\r\n            return response.data\r\n        }\r\n    },\r\n\r\n    getOtherUsers: () => {\r\n        return async (dispatch, getState) => {\r\n            // Ask for the list of users \r\n            const response = await axios.get(`${API}/api/users`)\r\n            return response.data\r\n        }\r\n    },\r\n\r\n    saveFriends: (friends, username) => {\r\n        return async (dispatch, getState) => {\r\n            // Save new friends\r\n            const response = await axios.put(`${API}/api/users/friends`, {username, friends})\r\n            return response.data\r\n        }\r\n    },\r\n\r\n    getTrips: (username, status) => {\r\n        return async (dispatch, getState) => {\r\n            // Get list of trips with a particular status\r\n            const response = await axios.get(`${API}/api/trips/${username}/${status}`)\r\n            return response.data\r\n        }\r\n    },\r\n\r\n    deleteTrip: (tripNumber, username) => {\r\n        return async (dispatch, getState) => {\r\n            // Delete selected trip\r\n            const response = await axios.delete(`${API}/api/trips/${username}/trip/${tripNumber}`)\r\n            return response.data\r\n        }\r\n    },\r\n\r\n    modifyTrip: (username, trip) => {\r\n        return async (dispatch, getState) => {\r\n            // Modifies selected trip\r\n            const response = await axios.put(`${API}/api/trips/${username}`, {...trip})\r\n            return response.data\r\n        }\r\n    },\r\n\r\n    getHistoryTrips: (username, status) => {\r\n        return async (dispatch, getState) => {\r\n            // Get trips list according to a specific status and agency who requests it\r\n            const response = await axios.get(`${API}/api/trips/${username}/${status}`)\r\n            return response.data\r\n        }\r\n    },\r\n\r\n    takeTrip: (username, numero) => {\r\n        return async (dispatch, getState) => {\r\n            // Take a trip from pendings\r\n            const response = await axios.get(`${API}/api/trips/${username}/trip/${numero}`)\r\n            return response.data\r\n        }\r\n    },\r\n\r\n    returnTrip: (username, numero) => {\r\n        return async (dispatch, getState) => {\r\n            // Return a trip from taken to pendings\r\n            const response = await axios.put(`${API}/api/trips/${username}/trip/${numero}`)\r\n            return response.data\r\n        }\r\n    }\r\n}\r\n\r\nexport default tripActions","import React, { useState } from 'react';\r\nimport TripForm from '../partials/TripForm';\r\nimport Swal from 'sweetalert2'\r\nimport { connect } from 'react-redux';\r\nimport tripActions from '../redux/tripActions';\r\n\r\nconst NewTrip = (props) => {\r\n    const [newTrip, setNewTrip] = useState({\r\n        paradas: false, conRegreso: false, tarifa2: false, restringido: false})\r\n    \r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const fieldHandler = e => {\r\n        var field = e.target.name\r\n        var value = e.target.type === 'checkbox' \r\n        ? e.target.checked ? true : false \r\n        : e.target.value        \r\n        value = field === 'restringido'\r\n            ? value === 'true' ? true : false\r\n            : value\r\n        if (field === 'tipo' && value === '') {\r\n            value = 'S'\r\n        }\r\n        if (field === 'restringido' && value === '') {\r\n            value = false\r\n        }\r\n        setNewTrip({...newTrip, [field]: value})\r\n    }\r\n\r\n    const submitHandler = async e => {\r\n        e.preventDefault()\r\n        let mandatoryFields = ['fecha', 'hora', 'nombre', 'lOrigen', 'dOrigen']\r\n        var error = false\r\n        mandatoryFields.map(field => {\r\n            error = (newTrip[field] === '' || newTrip[field] === undefined) ? true : error\r\n            return false\r\n        })\r\n        if (error) {\r\n            return Swal.fire({\r\n                text: 'Los campos marcados con (*) son obligatorios!',\r\n                icon: 'error',\r\n                confirmButtonText: 'Reintentar'\r\n            })\r\n        }\r\n        // If there's no mandatory fields empty, it sends trip to backend\r\n        setLoading(true)\r\n        let trip = {...newTrip, emisor: props.auth.username}\r\n        const response = await props.newTrip(trip)\r\n        setLoading(false)\r\n        await Swal.fire({\r\n            text: response.success ? 'Viaje cargado con éxito!' : response.error,\r\n            icon: response.success ? 'success' : 'error',\r\n            confirmButtonText: response.success ? 'OK' : 'Reintentar!'\r\n        })\r\n        if (response.success) {\r\n            return props.history.push('/')\r\n        }\r\n    }\r\n\r\n    const cancelHandler = e => {\r\n        e.preventDefault()\r\n        props.history.push('/')\r\n    }\r\n\r\n    return ( \r\n        <div className=\"newTripContainer\">\r\n            <TripForm fieldHandler={fieldHandler} submitHandler={submitHandler}\r\n            cancelHandler={cancelHandler} loading={loading} />\r\n        </div>\r\n     );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        auth: state\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    newTrip: tripActions.newTrip\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NewTrip);","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport tripActions from '../redux/tripActions';\r\nimport Swal from 'sweetalert2'\r\n\r\nconst Amigos = (props) => {\r\n\r\n    const [users, setUsers] = useState([])\r\n    const [myFriends, setMyFriends] = useState([])\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    useEffect(() => {\r\n        getUsers()\r\n    }, [props.auth.username])\r\n\r\n    const getUsers = async () => {\r\n        const response = await props.getOtherUsers()\r\n        setUsers(response.success ? response.users : [])\r\n        response.success && response.users.map(user => {\r\n            if (user.username === props.auth.username) {\r\n                setMyFriends(user.friends)\r\n            }\r\n            return false\r\n        })\r\n        return false\r\n    }\r\n\r\n    const cancelHandler = e => {\r\n        e.preventDefault()\r\n        props.history.push('/')\r\n    }\r\n\r\n    const changeHandler = e => {\r\n        if (e.target.checked) {\r\n            setMyFriends([...myFriends, e.target.name])\r\n        } else {\r\n            const newFriends = myFriends.filter(friend => friend !== e.target.name)\r\n            setMyFriends(newFriends)\r\n        }\r\n    }\r\n\r\n    const submitHandler = async e => {\r\n        e.preventDefault()\r\n        setLoading(true)\r\n        // Save new friends list\r\n        const response = await props.saveFriends(myFriends, props.auth.username)\r\n        setLoading(false)\r\n        await Swal.fire({\r\n            text: response.success ? 'Lista de amigos modificada!' : response.error,\r\n            icon: response.success ? 'success' : 'error',\r\n            confirmButtonText: response.success ? 'OK' : 'Reintentar'\r\n        })\r\n        if (response.success) {\r\n            props.history.push('/')\r\n        }\r\n    }\r\n\r\n    return ( \r\n            <div className=\"amigosContainer z-depth-5\">\r\n                <p className=\"titulo flow-text\">DEFINI O MODIFICA TUS AMIGOS</p>\r\n                <p className=\"flow-text\">\r\n                    Podés elegir una o más agencias que serán tus \"amigos\".  En cada viaje tendrás que definir\r\n                    si querés que ese viaje lo vean todos los usuarios o solamente tus amigos.  ¡Podés modificarlo\r\n                    luego si cambiás de idea!\r\n                </p>\r\n                <div className=\"nombresAmigos row\">\r\n                {users.map(user => {\r\n                    if (user.username !== props.auth.username) {\r\n                        return (\r\n                            <label key={user._id} className=\"col s12 m6 l4\">\r\n                                <input type=\"checkbox\" className=\"filled-in\" name={user.username} id={user.username} \r\n                                checked={myFriends.includes(user.username)} onChange={changeHandler} />\r\n                                <span>{user.name}</span>\r\n                            </label>\r\n                        )\r\n                    }\r\n                    return false\r\n                })}\r\n                </div>\r\n                <div className=\"amigosBotones row\">\r\n                    <div className=\"col s12 l6\">\r\n                        <button className=\"btn red darken-4\"\r\n                        onClick={cancelHandler} disabled={loading}>Cancelar</button>\r\n                    </div>\r\n                    <div className=\"col s12 l6\">\r\n                        <button className=\"btn green darken-4\"\r\n                        onClick={submitHandler} disabled={loading}>Validar</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n         );\r\n        }\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        auth: state\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    getOtherUsers: tripActions.getOtherUsers,\r\n    saveFriends: tripActions.saveFriends\r\n}\r\n \r\nexport default connect(mapStateToProps, mapDispatchToProps)(Amigos);","import React, { useState } from 'react';\r\nimport '../styles/SingleTrip.css'\r\n\r\nconst SingleTrip = (props) => {\r\n    const trip = props.trip\r\n\r\n    const [moreInfo, setMoreInfo] = useState(false)\r\n\r\n    return ( \r\n        <div className=\"singleTripContainer z-depth-5\">\r\n            <p className=\"tripNumero\">( {trip.numero} )</p>\r\n            <div className=\"tripFechaHora\">\r\n                <span className=\"material-icons left\">schedule</span> \r\n                <p><strong>{trip.fecha}</strong> a las <strong>{trip.hora}</strong> hs</p>\r\n            </div>\r\n            <p className=\"tripOrigen\">{trip.lOrigen.toUpperCase()}</p>\r\n            <p className=\"tripDestino\">{trip.lDestino && trip.lDestino.toUpperCase()}</p>\r\n            {trip.tipo === 'E' \r\n                ? <p className=\"tripTipoEjecutivo\">VIP</p> \r\n                    : trip.tipo === 'P' ? <p className=\"tripTipoPartner\">PARTNER</p> \r\n                    : <p className=\"tripTipoEjecutivo\"></p>}\r\n            <p className=\"tripTarifa2\">{trip.tarifa2 ? 'TARIFA 2' : ''}</p>\r\n            <span className=\"material-icons tripPlusInfo right\" onClick={() => setMoreInfo(!moreInfo)}>\r\n                {!moreInfo ? 'add_circle' : 'remove_circle'}\r\n            </span>\r\n            {trip.status === 'taken' && (\r\n                <p className=\"viajeAceptado\">{trip.emisor === props.user ? 'Aceptó:' : 'Emitió:'} \r\n                <span>{trip.emisor === props.user ? trip.receptor : trip.emisor}</span>\r\n                </p>\r\n            )}\r\n            {moreInfo && (\r\n                <div className=\"moreInfoContainer\">\r\n                    <div className=\"moreInfoPasajero\">\r\n                        <span className=\"material-icons left\">face</span> \r\n                        <p className=\"moreInfoNombreTelefono\"><strong>{trip.nombre}</strong> - ({trip.telefono})</p>\r\n                    </div>\r\n                    <div className=\"moreInfoLine\">\r\n                        <p>ORIGEN:</p>\r\n                        <span>{trip.dOrigen} ({trip.lOrigen})</span></div>\r\n                    <div className=\"moreInfoLine\">\r\n                        <p>DESTINO:</p> \r\n                        <span>{trip.dDestino} ({trip.lDestino})</span></div>\r\n                    <div className=\"moreInfoLine observaciones\">\r\n                        <p>OBSERVACIONES:</p> \r\n                        <span>{trip.observaciones}</span></div>\r\n                    <div className=\"moreInfoParticularidades\">\r\n                        {trip.tipo === 'E' && <span className=\"badge yellow accent-2 black-text\">VEHICULO EJECUTIVO</span>}\r\n                        {trip.tipo === 'P' && <span className=\"badge yellow accent-2 black-text\">VEHICULO PARTNER</span>}\r\n                        {trip.paradas && <span className=\"badge yellow accent-2 black-text\">TIENE PARADAS INTERMEDIAS</span>}\r\n                        {trip.conRegreso && <span className=\"badge yellow accent-2 black-text\">ES CON ESPERA Y REGRESO</span>}\r\n                        {trip.tarifa2 && <span className=\"badge yellow accent-2 black-text\">APTO TARIFA 2</span>}\r\n                    </div>\r\n                    <div className=\"moreInfoEmisorYBotones\">\r\n                        <p className=\"moreInfoEmisor\">Emitido por <span>{trip.emisor}</span></p>\r\n                        <div className=\"moreInfoBotones\">\r\n                        {props.user === trip.emisor\r\n                        ? ( <>\r\n                            {trip.status === 'deleted' \r\n                            ? (\r\n                                <p className=\"viajeEliminado\">VIAJE ELIMINADO</p>\r\n                            )\r\n                            : trip.status === 'taken' \r\n                            ? (\r\n                                <button className=\"btn blue darken-4\" data-trip={trip.numero}\r\n                                onClick={props.returnHandler}\r\n                                disabled={props.loading}>Devolver a la Nube</button>\r\n                            )\r\n                            : (\r\n                                <>\r\n                                <button className=\"btn blue darken-4\" data-trip={trip.numero}\r\n                                onClick={props.modifyHandler}\r\n                                disabled={props.loading}>Modificar</button>\r\n                                <button className=\"btn red darken-4\" data-trip={trip.numero}\r\n                                onClick={props.deleteHandler}\r\n                                disabled={props.loading}>Eliminar</button>\r\n                                </>\r\n                            )}\r\n                            </>)\r\n                        :  trip.status === 'taken'\r\n                            ? (\r\n                                <button className=\"btn blue darken-4\" data-trip={trip.numero}\r\n                                onClick={props.returnHandler}\r\n                                disabled={props.loading}>Devolver a la Nube</button>\r\n                            ) \r\n                            : (\r\n                                <button className=\"btn green darken-4\" data-trip={trip.numero}\r\n                                disabled={props.loading}\r\n                                onClick={props.takeHandler}>ACEPTAR!</button>\r\n                            )\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default SingleTrip;","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport tripActions from '../redux/tripActions';\r\nimport SingleTrip from '../partials/SingleTrip';\r\nimport Swal from 'sweetalert2'\r\nimport TripForm from '../partials/TripForm';\r\n\r\nconst Pendientes = (props) => {\r\n    const [trips, setTrips] = useState([])\r\n    const [loading, setLoading] = useState(false)\r\n    const [modifyTrip, setModifyTrip] = useState(false)\r\n\r\n    useEffect(() => {\r\n        if (props.socket) {\r\n            props.socket.on('reloadOrder', () => {\r\n                return getTrips()})\r\n        }\r\n        getTrips()\r\n    }, [props.auth.username, props.socket])\r\n\r\n    const getTrips = async () => {\r\n        const response = await props.getTrips(props.auth.username, 'pending')\r\n        // Change date format to DD-MM-YYYY and order trips\r\n        var orderedTrips = []\r\n        if (response.success) {\r\n            const changedDate = response.trips.map(trip => {\r\n                let newTrip = {...trip, \r\n                    fecha: `${trip.fecha.split('-')[2]}-${trip.fecha.split('-')[1]}-${trip.fecha.split('-')[0]}`,\r\n                    dateForOrder: new Date(trip.fecha.split('-')[0], trip.fecha.split('-')[1]-1, trip.fecha.split('-')[2])}\r\n                return newTrip\r\n            })\r\n            orderedTrips = changedDate.sort(function (a, b) {\r\n                return (a.dateForOrder - b.dateForOrder)\r\n            })\r\n        }\r\n        setTrips(orderedTrips)\r\n        const title = orderedTrips.length > 0 ? `( ${orderedTrips.length } ) Sistema Nube | CAAR` : 'Sistema Nube | CAAR'\r\n        document.title = title\r\n    }\r\n\r\n    const deleteHandler = async e => {\r\n        e.preventDefault()\r\n        const tripNumber = parseInt(e.target.dataset.trip)\r\n        const result = await Swal.fire({\r\n            text: \"¿Estas seguro de querer eliminar este viaje?\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: 'green',\r\n            cancelButtonColor: 'red',\r\n            confirmButtonText: 'Si, eliminar',\r\n            cancelButtonText: 'No, cancelar'\r\n          })\r\n        if (result.value) {\r\n            setLoading(true)\r\n            // Sends info to server in order to delete trip number\r\n            const response = await props.deleteTrip(tripNumber, props.auth.username)\r\n            await Swal.fire({\r\n                text: response.success ? 'El viaje ha sido eliminado con éxito.' : 'Ocurrió un error.  Reinténtelo!',\r\n                icon: response.success ? 'success' : 'error',\r\n                confirmButtonText: response.success ? 'OK' : 'Reintentar'\r\n            })\r\n            setLoading(false)\r\n            if (response.success) {\r\n                props.socket.emit('reloadPlease')\r\n                props.history.push('/')\r\n            }\r\n        }\r\n    }\r\n\r\n    const modifyHandler = e => {\r\n        e.preventDefault()\r\n        const tripNumber = e.target.dataset.trip\r\n        const tripInfo = trips.filter(trip => trip.numero === parseInt(tripNumber))\r\n        setModifyTrip({...tripInfo[0], fecha: `${tripInfo[0].fecha.split('-')[2]}-${tripInfo[0].fecha.split('-')[1]}-${tripInfo[0].fecha.split('-')[0]}`})\r\n    }\r\n\r\n    const fieldHandler = e => {\r\n        var field = e.target.name\r\n        var value = e.target.type === 'checkbox' \r\n        ? e.target.checked ? true : false \r\n        : e.target.value        \r\n        value = field === 'restringido'\r\n            ? value === 'true' ? true : false\r\n            : value\r\n        if (field === 'tipo' && value === '') {\r\n            value = 'S'\r\n        }\r\n        if (field === 'restringido' && value === '') {\r\n            value = false\r\n        }\r\n        setModifyTrip({...modifyTrip, [field]: value})\r\n    }\r\n\r\n    const submitHandler = async e => {\r\n        e.preventDefault()\r\n        let mandatoryFields = ['fecha', 'hora', 'nombre', 'lOrigen', 'dOrigen']\r\n        var error = false\r\n        mandatoryFields.map(field => {\r\n            error = (modifyTrip[field] === '' || modifyTrip[field] === undefined) ? true : error\r\n            return false\r\n        })\r\n        if (error) {\r\n            return Swal.fire({\r\n                text: 'Los campos marcados con (*) son obligatorios!',\r\n                icon: 'error',\r\n                confirmButtonText: 'Reintentar'\r\n            })\r\n        }\r\n        // If there's no mandatory fields empty, it sends new trip info to backend to modify original trip\r\n        const response = await props.modifyTrip(props.auth.username, modifyTrip)\r\n        await Swal.fire({\r\n            text: response.success ? 'Viaje modificado con éxito' : 'Ha ocurrido un error.  Reinténtelo!',\r\n            icon: response.success ? 'success' : 'error',\r\n            confirmButtonText: response.success ? 'OK' : 'Reintentar'\r\n        })\r\n        setModifyTrip(false)\r\n        if (response.success) {\r\n            props.socket.emit('reloadPlease')}\r\n        props.history.push('/')\r\n    }\r\n\r\n    const cancelHandler = e => {\r\n        e.preventDefault()\r\n        setModifyTrip(false)\r\n    }\r\n\r\n    const takeHandler = async e => {\r\n        e.preventDefault()\r\n        const tripNumber = e.target.dataset.trip\r\n        const result = await Swal.fire({\r\n            text: \"¿Estas seguro de querer aceptar este viaje?\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: 'green',\r\n            cancelButtonColor: 'red',\r\n            confirmButtonText: 'Si, tomarlo!',\r\n            cancelButtonText: 'No, cancelar'\r\n          })\r\n        if (result.value) {\r\n            setLoading(true)\r\n            const response = await props.takeTrip(props.auth.username, tripNumber)\r\n            await Swal.fire({\r\n                text: response.success ? 'El viaje ha sido tomado con éxito.' : 'Ocurrió un error.  Reinténtelo!',\r\n                icon: response.success ? 'success' : 'error',\r\n                confirmButtonText: response.success ? 'OK' : 'Reintentar'\r\n            })\r\n            setLoading(false)\r\n            if (response.success) {\r\n                props.socket.emit('reloadPlease')\r\n                props.history.push('/')\r\n            }\r\n        }\r\n        return false\r\n    }\r\n\r\n    return ( \r\n        <div className=\"pendingContainer\">\r\n            {modifyTrip \r\n            ? (\r\n                <TripForm trip={modifyTrip} cancelHandler={cancelHandler} fieldHandler={fieldHandler} \r\n                submitHandler={submitHandler} />\r\n            )\r\n            :\r\n            trips.map(trip => <SingleTrip trip={trip} user={props.auth.username} key={trip.numero}\r\n                deleteHandler={deleteHandler} modifyHandler={modifyHandler} takeHandler={takeHandler} />)\r\n        }\r\n        </div>\r\n     );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        auth: state\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    getTrips: tripActions.getTrips,\r\n    deleteTrip: tripActions.deleteTrip,\r\n    modifyTrip: tripActions.modifyTrip,\r\n    takeTrip: tripActions.takeTrip\r\n}\r\n \r\nexport default connect(mapStateToProps, mapDispatchToProps)(Pendientes);","import React, { useState, useEffect } from 'react';\r\nimport SingleTrip from '../partials/SingleTrip';\r\nimport { connect } from 'react-redux';\r\nimport tripActions from '../redux/tripActions';\r\nimport Swal from 'sweetalert2'\r\n\r\nconst Historico = (props) => {\r\n    const [display, setDisplay] = useState('')\r\n    const [trips, setTrips] = useState([])\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    useEffect(() => {\r\n        if (display !== '') {\r\n            getTrips()\r\n        }\r\n    }, [display])\r\n\r\n    const getTrips = async () => {\r\n        // Get trips list (according to user's selection -deleted/taken-)\r\n        const status = display === 'D' ? 'deleted' : 'taken'\r\n        const response = await props.getHistoryTrips(props.auth.username, status)\r\n        if (!response.success) {\r\n            setDisplay('')\r\n            return false\r\n        }\r\n        const trips = display === 'D'\r\n        ? response.trips\r\n        : display === 'E'\r\n            ? response.trips.filter(trip => trip.emisor === props.auth.username)\r\n            : response.trips.filter(trip => trip.receptor === props.auth.username)\r\n        setTrips(trips)\r\n        return false\r\n    }\r\n\r\n    const returnHandler = async e => {\r\n        e.preventDefault()\r\n        const tripNumber = parseInt(e.target.dataset.trip)\r\n        const result = await Swal.fire({\r\n            text: \"¿Estas seguro de querer devolver este viaje a la nube?\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: 'green',\r\n            cancelButtonColor: 'red',\r\n            confirmButtonText: 'Si, devolver',\r\n            cancelButtonText: 'No, cancelar'\r\n          })\r\n        if (result.value) {\r\n            setLoading(true)\r\n            // Sends info to server in order to return this trip\r\n            const response = await props.returnTrip(props.auth.username, tripNumber)\r\n            await Swal.fire({\r\n                text: response.success ? 'El viaje ha sido devuelto con éxito.' : 'Ocurrió un error.  Reinténtelo!',\r\n                icon: response.success ? 'success' : 'error',\r\n                confirmButtonText: response.success ? 'OK' : 'Reintentar'\r\n            })\r\n            setLoading(false)\r\n            if (response.success) {\r\n                props.socket.emit('reloadPlease')\r\n                props.history.push('/')\r\n            }\r\n        }\r\n    }\r\n\r\n    return ( \r\n        <div className=\"historicoContainer\">\r\n            <div className=\"historicoMenu\">\r\n                <button className={`btn light-blue ${display === 'E' ? 'darken-4' : 'lighten-2'}`}\r\n                onClick={() => setDisplay('E')}>Viajes EMITIDOS</button>\r\n                <button className={`btn light-blue ${display === 'A' ? 'darken-4' : 'lighten-2'}`}\r\n                onClick={() => setDisplay('A')}>Viajes ACEPTADOS</button>\r\n                <button className={`btn light-blue ${display === 'D' ? 'darken-4' : 'lighten-2'}`}\r\n                onClick={() => setDisplay('D')}>Viajes ELIMINADOS</button>\r\n            </div>\r\n            <div className=\"historicoViajes\">\r\n                {trips.map(trip => <SingleTrip trip={trip} user={props.auth.username} \r\n                returnHandler={returnHandler} loading={loading} />)}\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        auth: state\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    getHistoryTrips: tripActions.getHistoryTrips,\r\n    returnTrip: tripActions.returnTrip\r\n}\r\n \r\nexport default connect(mapStateToProps, mapDispatchToProps)(Historico);","import React, { useEffect, useState } from 'react';\nimport './styles/mainStyles.css'\nimport {BrowserRouter, Switch, Route, Redirect} from 'react-router-dom'\nimport Header from './components/Header';\nimport Login from './components/Login';\nimport { connect } from 'react-redux';\nimport authActions from './redux/authActions';\nimport NewTrip from './components/NewTrip';\nimport Amigos from './components/Amigos';\nimport Pendientes from './components/Pendientes';\nimport Historico from './components/Historico';\nimport io from 'socket.io-client'\nimport {API} from './BE'\n\nfunction App(props) {\n  const [socket, setSocket] = useState(false)\n\n  useEffect(() => {\n    if (props.auth.username) {\n      setSocket(io(API))\n    }},\n  [props.auth.username])\n\n  if (!props.auth.username && localStorage.getItem('_id')) {\n    // There's no user loged in Redux but there's an _id in LocalStorage (he might have pushed F5)\n    props.logUser({_id: localStorage.getItem('_id')})\n  }\n  \n  const routes = (!props.auth.username && !localStorage.getItem('_id'))\n  // Rutas sin usuario logueado\n  ? (\n    <Switch>\n      <Route path=\"/login\" component={Login} />\n      <Redirect to=\"/login\" />\n    </Switch>\n  )\n  // Rutas con usuario logueado\n  : (\n    <Switch>\n      <Route path=\"/pendientes\" render={props => <Pendientes {...props} socket={socket} />} />\n      <Route path=\"/nuevo-viaje\" render={props => <NewTrip {...props} socket={socket} />} />\n      <Route path=\"/historico\" render={props => <Historico {...props} socket={socket} />} />\n      <Route path=\"/amigos\" render={props => <Amigos {...props} socket={socket} />} />\n      <Route path=\"/logout\" render={() => {\n        props.logOutUser()\n        return false\n      }} />\n      <Redirect to=\"/pendientes\" />\n    </Switch>\n  )\n\n  return (\n    <BrowserRouter>\n      <Header />\n      <div className=\"mainContainer\">\n        {routes}\n      </div>\n    </BrowserRouter>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state\n  }\n}\n\nconst mapDispatchToProps = {\n  logUser: authActions.logUser,\n  logOutUser: authActions.logOutUser\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initialState = {}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'LOG_USER':\r\n            localStorage.setItem('_id', action.payload._id)\r\n            return {...state, ...action.payload}\r\n        case 'LOGOUT_USER':\r\n            localStorage.clear()\r\n            return {}\r\n        default:\r\n            return state \r\n    }\r\n}\r\n\r\nexport default authReducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore, applyMiddleware} from 'redux'\nimport {Provider} from 'react-redux'\nimport thunk from 'redux-thunk'\nimport authReducer from './redux/authReducer';\n\nconst myStore = createStore(authReducer, applyMiddleware(thunk))\n\nReactDOM.render(\n  <Provider store={myStore}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logoNube.ccec3614.png\";"],"sourceRoot":""}